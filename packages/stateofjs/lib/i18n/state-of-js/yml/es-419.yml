locale: es-419
namespace: js
translations:

  ###########################################################################
  # General
  ###########################################################################

  - key: general.survey_intro_js2019
    t: >
        Al mundo de JavaScript le serviría un poco de clasificación.


        Desde el 2016, esta encuesta ha recolectado
        información de más de 20000 desarrolladores cada año para identificar tendencias actuales y próximas.


        Llena esta encuesta y ayúdanos a determinar qué librerías quieren aprender
        los desarrolladores, cuales tienen los mejores índices de satisfacción, y mucho más.

  ###########################################################################
  # Sections
  ###########################################################################

  - key: sections.syntax.title
    t: Sintaxis
  - key: sections.syntax.description
    t: La gramática de JavaScript.
  
  - key: sections.language.title
    t: Lenguaje
  - key: sections.language.description
    t: El vocabulario de JavaScript.

  - key: sections.data_structures.title
    t: Estructuras de Datos
  - key: sections.data_structures.description
    t: Cómo almacenas y manipulas datos.

  - key: sections.browser_apis.title
    t: APIs del Navegador
  - key: sections.browser_apis.description
    t: Las funcionalidades provistas por el navegador.

  - key: sections.other_features.title
    t: Otras funcionalidades
  - key: sections.other_features.description
    t: Otras tecnologías y patrones

  - key: sections.patterns.title
    t: Patrones
  - key: sections.patterns.description
    t: Cómo prefieres escribir código

  - key: sections.javascript_flavors.title
    t: Variantes de JavaScript
  - key: sections.javascript_flavors.description
    t: Lenguajes que compilan a JavaScript

  - key: sections.front_end_frameworks.title
    t: Frameworks Front-end
  - key: sections.front_end_frameworks.description
    t: Frameworks y librerías front-end

  - key: sections.datalayer.title
    t: Capa de datos
  - key: sections.datalayer.description
    t: Cargando y administrando datos en tu aplicación

  - key: sections.back_end_frameworks.title
    t: Frameworks Back-end
  - key: sections.back_end_frameworks.description
    t: JavaScript en el servidor

  - key: sections.testing.title
    t: Testing
  - key: sections.testing.description
    t: Herramientas para evaluar tu código

  - key: sections.mobile_desktop.title
    t: Móvil y Escritorio
  - key: sections.mobile_desktop.description
    t: JavaScript para dispositivos móviles y aplicaciones de escritorio

  ###########################################################################
  # Options
  ###########################################################################

  # CSS for print
  - key: options.css_for_print.0
    t: (Casi) Nunca escribo estilos para impresión
  - key: options.css_for_print.1
    t: Ocasionalmente escribo estilos para impresión
  - key: options.css_for_print.2
    t: Escribo estilos para impresión como parte de la mayoría de los proyectos
  - key: options.css_for_print.3
    t: Me enfoco principalmente en estilos para impresión

  # CSS for email
  - key: options.css_for_email.0
    t: (Casi) nunca escribo CSS para clientes de correo electrónico
  - key: options.css_for_email.1
    t: Ocasionalmente escribo CSS para clientes de correo electrónico
  - key: options.css_for_email.2
    t: Escribo CSS para clientes de correo electrónico como parte de la mayoría de los proyectos
  - key: options.css_for_email.3
    t: Me enfoco principalmente en CSS para clientes de correo electrónico

  ###########################################################################
  # Features
  ###########################################################################

  # syntax
  - key: features.destructuring
    t: Desestructuración
  - key: features.destructuring.description
    t: 'Ejemplo: <code>const { foo } = bar</code>'
  - key: features.spread_operator
    t: Operador de propagación (spread)
  - key: features.spread_operator.description
    t: 'Ejemplo: <code>[...array1, ...array2]</code>'
  - key: features.arrow_functions
    t: Funciones Arrow
  - key: features.arrow_functions.description
    t: 'Ejemplo: <code>const foo = () => {}</code>'

  # language
  - key: features.proxies
    t: Proxies
  - key: features.async_await
    t: Async/Await
  - key: features.promises
    t: Promesas
  - key: features.decorators
    t: Decoradores
  - key: features.decorators.description
    t:  >
      En su forma más simple, un decorador es una forma de
      envolver una pieza de código on otra — literalmente "decorándola".

  # data structures
  - key: features.maps
    t: Maps
  - key: features.sets
    t: Sets
  - key: features.typed_arrays
    t: Typed Arrays
  - key: array_prototype_flat
    t: Array.prototype.flat

  # browser apis
  - key: features.service_workers
    t: Service Workers
  - key: features.local_storage
    t: LocalStorage
  - key: features.i18n
    t: i18n
  - key: features.web_components
    t: Web Components
  - key: features.web_audio
    t: Web Audio API
  - key: features.webgl
    t: WebGL
  - key: features.web_animations
    t: Web Animations API
  - key: features.webrtc
    t: WebRTC
  - key: features.web_speech
    t: Web Speech API
  - key: features.webvr
    t: WebVR
  - key: features.websocket
    t: Websocket
  - key: features.fetch
    t: Fetch API

  # other features
  - key: features.pwa
    t: Aplicaciones Web Progresivas (PWA)
  - key: features.wasm
    t: WebAssembly (WASM)
  
  # patterns
  - key: patterns.object_oriented_programming
    t: Programación Orientada a Objectos
  - key: features.functional_programming
    t: Programación Funcional
  - key: features.reactive_programming
    t: Programación Reactiva

  ###########################################################################
  # Opinions
  ###########################################################################

  - key: opinions.js_moving_in_right_direction
    t: JavaScript se está moviendo en la dirección correcta
    
  - key: opinions.building_js_apps_overly_complex
    t: Construir aplicaciones JavaScript es demasiado complejo actualmente
    
  - key: opinions.js_over_used_online
    t: JavaScript se usa demasiado online
    
  - key: opinions.enjoy_building_js_apps
    t: Me gusta construir aplicaciones JavaScript
    
  - key: opinions.would_like_js_to_be_main_lang
    t: Me gustaría que JavaScript sea mi lenguaje de programación principal
    
  - key: opinions.js_ecosystem_changing_to_fast
    t: El ecosistema de JavaScript cambia demasiado rápido
    
  - key: opinions.missing_from_js
    t: ¿Qué piensas que le falta a JavaScript actualmente?
  - key: opinions.missing_from_js.description
    t: Funcionalidades que te gustaría ver en JavaScript algún día.